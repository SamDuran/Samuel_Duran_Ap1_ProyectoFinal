// <auto-generated />
using System;
using Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Samuel_Duran_Ap1_PF.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Entidades.Almacenes", b =>
                {
                    b.Property<int>("AlmacenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DenominacionAlmacen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DenominacionCentro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreAlmacen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCentro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AlmacenId");

                    b.ToTable("Almacenes");

                    b.HasData(
                        new
                        {
                            AlmacenId = 1,
                            DenominacionAlmacen = "San Francisco",
                            DenominacionCentro = "San Francisco - Edenorte",
                            NombreAlmacen = "N301",
                            NombreCentro = "N300"
                        },
                        new
                        {
                            AlmacenId = 2,
                            DenominacionAlmacen = "Santiago",
                            DenominacionCentro = "Santiago - Edenorte",
                            NombreAlmacen = "N101",
                            NombreCentro = "N100"
                        },
                        new
                        {
                            AlmacenId = 3,
                            DenominacionAlmacen = "Puerto plata",
                            DenominacionCentro = "Puerto Plata - Edenorte",
                            NombreAlmacen = "N401",
                            NombreCentro = "N400"
                        },
                        new
                        {
                            AlmacenId = 4,
                            DenominacionAlmacen = "Mao",
                            DenominacionCentro = "Mao- Edenorte",
                            NombreAlmacen = "N501",
                            NombreCentro = "N500"
                        },
                        new
                        {
                            AlmacenId = 5,
                            DenominacionAlmacen = "La vega",
                            DenominacionCentro = "La vega - Edenorte",
                            NombreAlmacen = "N601",
                            NombreCentro = "N600"
                        });
                });

            modelBuilder.Entity("Entidades.EntradasAlmacen", b =>
                {
                    b.Property<int>("EntradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlmacenOrigenAlmacenId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransportistaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntradaId");

                    b.HasIndex("AlmacenOrigenAlmacenId");

                    b.HasIndex("TransportistaId");

                    b.ToTable("EntradasAlmacenes");
                });

            modelBuilder.Entity("Entidades.Materiales", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnidadesMedida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaterialId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("Entidades.MaterialesRecibidos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntradaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EntradaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialesRecibidos");
                });

            modelBuilder.Entity("Entidades.Transportistas", b =>
                {
                    b.Property<int>("TransportistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCarnet")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransportistaId");

                    b.ToTable("Transportistas");
                });

            modelBuilder.Entity("Entidades.EntradasAlmacen", b =>
                {
                    b.HasOne("Entidades.Almacenes", "AlmacenOrigen")
                        .WithMany()
                        .HasForeignKey("AlmacenOrigenAlmacenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Transportistas", "Transportista")
                        .WithMany()
                        .HasForeignKey("TransportistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlmacenOrigen");

                    b.Navigation("Transportista");
                });

            modelBuilder.Entity("Entidades.MaterialesRecibidos", b =>
                {
                    b.HasOne("Entidades.EntradasAlmacen", "entrada")
                        .WithMany("MaterialesRecibidos")
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Materiales", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("entrada");

                    b.Navigation("material");
                });

            modelBuilder.Entity("Entidades.EntradasAlmacen", b =>
                {
                    b.Navigation("MaterialesRecibidos");
                });
#pragma warning restore 612, 618
        }
    }
}
