@page "/R_Transportistas"
@page "/R_Transportistas/{TransportistaID:int}"

@inject IToastService toastService
@inject TransportistasBLL transportistaBLL
<PageTitle>Registro de Transportistas</PageTitle>
@if(isLoading)
{
    <div class="Loader-Container">
        <div class="Loader"/>
        <div class="Loader2"/>
    </div>
}else
{

    <EditForm Model="transportista" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div className="Container" style="Margin: 20px;">
            <div class="card">

                <div class="card-header">
                    <h3 style="text-align: center;">Registro de transportistas</h3>
                </div>

                <div class="card-body" style="Margin: 20px 100px 20px 100px;">

                    @* ID *@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <div class="input-group" style="margin: 22px; ">
                                    <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">ID Transportista</span>
                                    <InputNumber @bind-Value="transportista.TransportistaId" class="form-control col-4" />
                                    <ValidationMessage For="@(() => transportista.TransportistaId)" />
                                    <div class="input-group-append">
                                        <button type="button" style="z-index: 0;" class="btn btn-primary input-group-text"
                                            @onclick="Buscar"><span class="oi oi-magnifying-glass">Buscar</span></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @* Fecha registro *@
                    <div class="input-group" style="margin: 22px; ">
                        <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">Fecha Registro</span>
                        <InputDate @bind-Value="transportista.FechaRegistro" class="form-control col-4" />
                    </div>

                    @* Nombres *@
                    <div class="input-group" style="margin: 22px; ">
                        <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">Nombres</span>
                        <InputText @bind-Value="transportista.Nombres" class="form-control col-4" 
                            placeholder="(Ejemplo: 'Juan Steven')"/>
                            <ValidationMessage For="@(() => transportista.Nombres)"/>
                    </div>

                    @* Apellidos *@
                    <div class="input-group" style="margin: 22px; ">
                        <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">Apellidos</span>
                        <InputText @bind-Value="transportista.Apellidos" class="form-control col-4" 
                            placeholder="(Ejemplo: 'Perez Mart&iacute;nez')"/>
                            <ValidationMessage For="@(() => transportista.Apellidos)"/>
                    </div>

                    @* No.Carnet *@
                    <div class="input-group" style="margin: 22px; ">
                        <span class="input-group-text" style="background-color: #c5c5c550;width: 20%;">No.Carnet</span>
                        <InputNumber @bind-Value="transportista.NumeroCarnet" class="form-control col-4"/>
                        <ValidationMessage For="@(() => transportista.NumeroCarnet)"/>
                    </div>
                </div>

                <div class="card-footer">
                    @* Botones *@
                    <div class="form-group text-center" style="justify-content: space-between;">
                        <div class="input-group-append" style="display: inline-block;">
                            <button type="button" style="margin: 10px;" class="btn btn-lg btn-primary"
                                @onclick="Nuevo"><span class="oi oi-sun"></span> Nuevo</button>
                        </div>
                        <div class="input-group-append" style="display: inline-block;">
                            <button type="submit" style="margin: 10px;" class="btn btn-lg btn-success"
                                ><span class="oi oi-circle-check"></span> Guardar</button>
                        </div>
                        <div class="input-group-append" style="display: inline-block;">
                            <button type="button" style="margin: 10px;" class="btn btn-lg btn-danger"
                                @onclick="Eliminar"><span class="oi oi-trash"></span> Eliminar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
@code {

    [Parameter]
    public int TransportistaID { get; set; }
    public Transportistas transportista { get; set; } = new Transportistas();
    private bool isLoading {get;set;} = true;
    

    protected override void OnInitialized()
    {
        transportista.TransportistaId = TransportistaID;
        Buscar();
        isLoading = false; 
    }
    public void Buscar()
    {
        if(this.transportista.TransportistaId>0)
        {
            var encontrado = transportistaBLL.Buscar(this.transportista.TransportistaId);

            if(encontrado!= null)
                this.transportista= encontrado;
            else
                toastService.ShowError("No se encontró un transportista con ese ID");
        }
    }
    public void Guardar()
    {
        if(TransportistaValido())
        {
            if(transportistaBLL.Guardar(transportista))
            {
                toastService.ShowSuccess("Se guardó exitosamente");
                Nuevo();
            }
            else
            {
                toastService.ShowError("No se pudo guardar.");
            }
        }
    }
    public void Nuevo()
    {
        transportista = new Transportistas();
    }
    public void Eliminar()
    {
        if(transportistaBLL.Eliminar(transportista.TransportistaId))
        {
            toastService.ShowSuccess("Eliminación Exitosa");
            Nuevo();
        }
        else
        {
            toastService.ShowError("No se pudo eliminar.");
        }
    }
    private bool TransportistaValido()
    {
        bool valido = true;
        try
        {
            var TransportistaBuscado = transportistaBLL.BuscarPorCarnet(this.transportista.NumeroCarnet);
            if(TransportistaBuscado !=null && TransportistaBuscado.TransportistaId != this.transportista.TransportistaId)
            {
                valido = false;
                toastService.ShowError("El Carnet del transportista ya existe.", "Carnet existente");
            }
        }catch(Exception)
        {
            throw;
        }

        return valido;
    }
}