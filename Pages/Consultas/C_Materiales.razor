@page "/C_Materiales"


@inject MaterialesBLL materialesBLL

<PageTitle>Consulta de Materiales</PageTitle>

<EditForm Model="lista" OnValidSubmit="@Buscar">
    <div class="card" style="margin:30px;">
        <div class="card-header">
            <h5 style="text-align:center;">Consulta de materiales</h5>
        </div>
    </div>

    <div class="card-body">
        <form>
            <div class="input-group d-flex align-items-end">

                @* Filtro *@
                <div class="input-group" style="margin-right: 30px; width: 16rem;">
                    <span class="input-group-text">Filtro</span>
                    <InputSelect class="form-select text-14 col-3" @bind-Value="Filtro">
                        <option value="1" selected>ID</option>
                        <option value="2">Descripci&oacute;n</option>
                        <option value="3">U/M</option>
                        <option value="4">Cantidad</option>
                        <option value="5">Costo</option>
                        <option value="6">Valor Inventario</option>
                    </InputSelect>
                </div>

                @* Fecha Desde *@
                <div class="input-group" style=" margin-right: 10px; width: 15rem;">
                    <span class="input-group-text">Desde</span>
                    <InputDate @bind-Value="FechaDesde" class="form-control col-4" />
                </div>

                @* Fecha Hasta*@
                <div class="input-group" style=" width: 15rem;">
                    <span class="input-group-text">Hasta</span>
                    <InputDate @bind-Value="FechaHasta" class="form-control col-4" />
                </div>

                @* TextBox Busqueda *@
                <div class="flex-fill mx-2">
                    <div class="input-group">
                        <span class="input-group-text">Busqueda</span>
                        <InputText class="form-control" @bind-Value="Criterio" />
                    </div>
                </div>

                @* Boton Buscar *@
                <button type="button" style="z-index:0;" class="btn btn-primary" @onclick="Buscar">
                    <i class="oi oi-magnifying-glass mr-2" /> Buscar
                </button>
            </div>
        </form>
    </div>
    @* Tabla *@
    <table class="table table-light table-striped table-hover">
        <thead class="thead">
            <tr class="table table-light">
                <th>ID</th>
                <th>Descripción</th>
                <th>U/M</th>
                <th>Cantidad</th>
                <th>Costo</th>
                <th>Valor Inventario</th>
                <th>Fecha registro</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (lista==null || lista.Count == 0)
            {
                <span style="color:#FFFFFF; text-shadow: 1.5px 2px rgba(0, 0, 0, 0.4); margin: 20px; text-align:center">No
                    hay materiales registrados</span>
            }
            else
            {
                @foreach (var item in lista)
                {
                    Fecha = DateOnly.FromDateTime(item.FechaRegistro);
                    <tr>
                        <td>@item.MaterialId</td>
                        <td>@item.Descripcion</td>
                        <td>@item.UnidadesMedida</td>
                        <td>@item.Cantidad</td>
                        <td>@item.Costo</td>
                        <td>@item.ValorInventario</td>
                        <td>@Fecha</td>
                        <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="R_materiales/@item.MaterialId"> Ver</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</EditForm>


@code {
    public List<Materiales>? lista { get; set; } = new List<Materiales>();
    public string? Filtro { get; set; }
    private DateOnly Fecha { get; set; }
    private string? Criterio { get; set; }
    private DateTime FechaDesde { get; set; } = new DateTime(1990, 12, 31);
    private DateTime FechaHasta { get; set; } = DateTime.Today.AddDays(1);

    protected override void OnInitialized()
    {
        lista = materialesBLL.GetList(m => true);
    }
    public void Buscar()
    {
        lista = new List<Materiales>();
        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "1": //Id
                    {
                        int ID = Utilities.ToInt(Criterio);
                        if (ID == -1)
                            lista = materialesBLL.GetList(m => m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        else
                            lista = materialesBLL.GetList(m => m.MaterialId == ID && m.FechaRegistro >= FechaDesde && m.FechaRegistro <=
                            FechaHasta);
                        break;
                    }
                case "2": //Descripcion
                    {
                        lista = materialesBLL.GetList(m => m.Descripcion.ToLower().Contains(Criterio.ToLower()) && m.FechaRegistro >= FechaDesde
                        && m.FechaRegistro <= FechaHasta);
                        break;
                    }
                case "3": //Unidad de Medida
                    {
                        lista = materialesBLL.GetList(m => m.UnidadesMedida.ToLower().Contains(Criterio.ToLower()) && m.FechaRegistro >=
                        FechaDesde && m.FechaRegistro <= FechaHasta);

                        break;
                    }
                case "4": // Cantidad
                    {
                        decimal Cantidad = Utilities.ToDecimal(Criterio);
                        if (Cantidad == -1)
                            lista = materialesBLL.GetList(m => m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        else
                            lista = materialesBLL.GetList(m => m.Cantidad == Cantidad && m.FechaRegistro >= FechaDesde && m.FechaRegistro <=
                            FechaHasta);
                        break;
                    }
                case "5": //Costo
                    {
                        decimal Costo = Utilities.ToDecimal(Criterio);
                        if (Costo == -1)
                            lista = materialesBLL.GetList(m => m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        else
                            lista = materialesBLL.GetList(m => m.Costo == Costo && m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        break;
                    }
                    case "6": //ValorInventario
                    {
                        decimal ValorInventario = Utilities.ToDecimal(Criterio);
                        if (ValorInventario == -1)
                            lista = materialesBLL.GetList(m => m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        else
                            lista = materialesBLL.GetList(m => m.ValorInventario == ValorInventario && m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
                        break;
                    }
            }
        }
        else
        {
            lista = materialesBLL.GetList(m => m.FechaRegistro >= FechaDesde && m.FechaRegistro <= FechaHasta);
        }
    }
}